# coding:utf-8from flask import Flask, request, render_template, redirect, url_for, sessionfrom db import *import timeimport tracebackapp = Flask(__name__)app.secret_key = "1q2w34"# def login_session():# 	if not session.get('name'):# 		return redirect('/login')@app.route('/login', methods=("GET", "POST"))def user_login():	error = None	if request.method == "GET":		return render_template('login.html')	if request.method == 'POST':		data = dict((k, v[0]) for k, v in dict(request.form).items())		print data		if not data['name'] or not data['password']:			error = 'username or password could not be null!!!!'			return render_template('login.html', error=error)		if data['name'] not in [i['name'] for i in user_list(['name'])]:			error = 'user name is not found'			return render_template('login.html', error=error)		if data['password'] != user_check(data['name'])['password']:			print 'password is incorrect'			error = 'password is incorrect'			return render_template('login.html', error=error)		else:			session['name'] = data['name']			session['role'] = user_check(data['name'])['role']			print session			return redirect("/user")@app.route("/")def index():	return render_template('index.html')@app.route("/user")def user_session():	if not session.get('name'):		return redirect('/login')	if session.get('role') == 'admin':		return redirect('/userlist')	if session.get('role') == 'user':		# user = fetch_single_user(session.get('name'))		user = user_check(session.get('name'))		return render_template('user.html', user=user)@app.route("/userlist")def users():	if not session.get('name'):		return redirect('/login')	if session.get('role') != 'admin':		return redirect('/user')	fields = ['id', 'name', 'name_cn', 'email', 'mobile', 'role', 'status']	result = user_list(fields)	return render_template('userlist.html', users=result)@app.route("/update", methods=('GET', 'POST'))def user_update():	if not session.get('name', None):		print 'no session here!!!!!'		return redirect('/login')	if session.get('role') == 'user':		if request.method == 'POST':			data = dict((k, v[0]) for k, v in dict(request.form).items())			modify_user(data)			return redirect('/user')		else:			id = request.args.get('id', None)			user = fetch_single_user(id)			return render_template('userprofile.html', user=user)	if session.get('role') == 'admin':		if request.method == 'POST':			data = dict((k, v[0]) for k, v in dict(request.form).items())			print data			modify_user(data)			return redirect('/userlist')		else:			name = request.args.get('id', None)			user = fetch_single_user(name)			return render_template('update.html', user=user)@app.route('/add', methods=('GET', 'POST'))def new_user():	if request.method == 'POST':		data = dict((k, v[0]) for k, v in dict(request.form).items())		data['role'] = 'user'		data['status'] = '1'		print data		if data['repwd'] != data['password']:			result = 'Register failed'			return render_template('register.html', result=result)		elif user_check(data['name']):			result = 'Duplicate username!!!!'			return render_template('register.html', result=result)		else:			data.pop('repwd')			data['create_time'] = time.strftime("%Y-%m-%d %H:%M:%S", time.localtime())			add_user(data)			return redirect('/login')	return render_template('register.html')@app.route('/delete', methods=('GET', 'POST'))def del_user():	if session.get('name') == 'admin':		userid = request.args.get('id')		delete_user(userid)		return redirect('userlist')	else:		return redirect('/user')@app.route('/password', methods=('GET', 'POST'))def modify_password():	if session.get('role') == 'admin':		if request.method == 'POST':			data = dict((k, v[0]) for k, v in dict(request.form).items())			print data			if data['newpwd'] != data['repwd']:				print "new password failed"			user = fetch_single_user(data['id'])			user['password'] = data['newpwd']			modify_user(user)			result = 'update successfully'			return render_template('modify.html', user=user, result=result)		user_id = request.args.get('id')		user = fetch_single_user(user_id)		return render_template('modify.html', user=user)	elif not session.get('name'):		if request.method == 'POST':			data = dict((k, v[0]) for k, v in dict(request.form).items())			print data			if data['newpwd'] != data['repwd']:				print "new password failed"			user = fetch_single_user(data['id'])			if user['password'] != data['orgpwd']:				print "original password failed"				return render_template('password.html', user=user)			else:				print user				user['password'] = data['newpwd']				modify_user(user)				result = 'update successfully'				return render_template('password.html', user=user, result=result)	user_id = request.args.get('id')	user = fetch_single_user(user_id)	return render_template('password.html', user=user)@app.route('/logout')def loginout():	session.pop('name')	return redirect('/login')if __name__ == "__main__":	app.run(host="0.0.0.0", port=8080, debug=True)